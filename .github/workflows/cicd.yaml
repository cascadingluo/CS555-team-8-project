# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - chat_history_use
#   # pull_request:
#   #   branches:
#   #     - chat_history_use

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     services:
#       mongo:
#         image: mongo:latest
#         ports:
#           - 27017:27017

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: "18"

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: "3.13"

#       - name: Install frontend dependencies
#         working-directory: frontend
#         run: npm install

#       - name: Run frontend tests
#         working-directory: frontend
#         run: npm test

#       - name: Build frontend
#         working-directory: frontend
#         run: npm run build

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build-and-test

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Deploy backend
#         working-directory: backend
#         run: |
#           npm install
#           npm start

#       - name: Deploy frontend
#         working-directory: frontend
#         run: |
#           npm install
#           npm run build
#           npm run preview

name: CI Pipeline

on:
  push:
    branches: 
      - chat_history_use
  pull_request:
    branches: 
      - chat_history_use

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install Backend Dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r frontend/requirements.txt
        python3 -m pip install pytest pytest-cov

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        npm ci

    - name: Run Tests
      env:
        MONGODB_URI: mongodb://localhost:27017/test
        PYTHONPATH: ./frontend

      run: |
        # Run Python tests with coverage
        python -m pytest tests/ --cov=frontend --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: true

    - name: Stop containers
      if: always()
      run: |
        docker stop $(docker ps -a -q) || true